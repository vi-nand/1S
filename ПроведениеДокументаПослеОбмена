Событие: После загрузки

Если Объект.ПометкаУдаления тогда
 Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
Иначе
// Если  Объект.Проведен тогда
  
//  Если не ОбъектНайден тогда
//   Объект.Проведен=ложь; 
//  КонецЕсли; 
  
//  попытка
    
   Объект.Проведен= Истина;
   Объект.Записать(РежимЗаписиДокумента.Проведение);
//   Объект.Записать();

//  исключение
//   Объект.Проведен = Ложь;
//   Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
//  конецпопытки;
  
// Иначе
//  Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
// КонецЕсли;
КонецЕсли;



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////перед получением измененных

Организация = Неопределено;

Организации = Новый Массив;
Для Каждого ОрганизацияУзлаОбмена из УзелДляОбмена.Организации Цикл
	Если ЗначениеЗаполнено(ОрганизацияУзлаОбмена.Организация)
		И ОрганизацияУзлаОбмена.Организация <> Справочники.Организации.ПустаяСсылка() Тогда
		Организации.Добавить(ОрганизацияУзлаОбмена.Организация);
	КонецЕсли;
КонецЦикла;

Если Организации.Количество() = 1 Тогда   
	Организация =  Организации[0];
Иначе
	Организация =  Справочники.Организации.ОрганизацияПоУмолчанию(Пользователи.ТекущийПользователь());
КонецЕсли;

Если  Организация = Неопределено Тогда
	Организация =  Справочники.Организации.ПустаяСсылка();
КонецЕсли;

Параметры.Вставить("Организация", Организация);



////////////////////////////////Перед выгрузкой объекта

Если Не Объект.Проведен Тогда
ПланыОбмена.УдалитьРегистрациюИзменений(УзелДляОбмена,Объект);
Отказ = Истина;
КонецЕсли;  





////////////////////////////////////////////////Перед выгрузкой ПП

     Результат = Неопределено;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаНаОбъект", Источник.ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияБанковскихДокументов.Состояние
	|ИЗ
	|	РегистрСведений.СостоянияБанковскихДокументов КАК СостоянияБанковскихДокументов
	|ГДЕ
	|	СостоянияБанковскихДокументов.СсылкаНаОбъект = &СсылкаНаОбъект";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Результат = Выборка.Состояние;
		
	КонецЕсли;


	Если Не Результат=Перечисления.СостоянияБанковскихДокументов.Оплачено  Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(УзелДляОбмена,Источник);
		Отказ = Истина;
	КонецЕсли;	
	
	
	
Организации = Новый Массив;
Для Каждого ОрганизацияУзлаОбмена из УзелДляОбмена.Организации Цикл
	//Если ЗначениеЗаполнено(ОрганизацияУзлаОбмена.Организация)
	//	И ОрганизацияУзлаОбмена.Организация <> Справочники.Организации.ПустаяСсылка() Тогда
		Организации.Добавить(ОрганизацияУзлаОбмена.Организация);
	//КонецЕсли;
КонецЦикла;

Если Организации.Найти(Источник.Организация)=Неопределено Тогда
		ПланыОбмена.УдалитьРегистрациюИзменений(УзелДляОбмена,Источник);
		Отказ = Истина;
КонецЕсли;	



////////////////////////////////После загрузки ПП

Если Объект.ПометкаУдаления тогда
 Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
Иначе
// Если  Объект.Проведен тогда
  
//  Если не ОбъектНайден тогда
//   Объект.Проведен=ложь; 
//  КонецЕсли; 
  
  попытка
    
   Объект.Проведен= Истина;
   Объект.Записать(РежимЗаписиДокумента.Проведение);
//   Объект.Записать();

  исключение
   Объект.Проведен = Ложь;
   Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  конецпопытки;
  
// Иначе
//  Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
// КонецЕсли;
КонецЕсли;




//////////////////////После загрузки прочие док

Если Объект.ПометкаУдаления тогда
 Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
Иначе
 Если  Объект.Проведен тогда
  
  Если не ОбъектНайден тогда
   Объект.Проведен=ложь; 
  КонецЕсли; 
  
  попытка
   Объект.Записать(РежимЗаписиДокумента.Проведение);
  исключение
   Объект.Проведен = Ложь;
   Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  конецпопытки;
  
 Иначе
  Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
 КонецЕсли;
КонецЕсли;
